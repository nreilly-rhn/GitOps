apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: openshift-servicemesh
  namespace: openshift-gitops
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: Deploy Operators for OpenShift ServiceMesh
  sourceRepos:
  - '*'
  destinations:
  - namespace: '*'
    server: '*'
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: servicemesh-bundle
  namespace: openshift-gitops
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: openshift-servicemesh
  destination:
    server: https://kubernetes.default.svc
  source:
    path: ArgoCD/Infra/ServiceMesh/Operators
    repoURL: https://github.com/nreilly-rhn/GitOps
    targetRevision: main
  syncPolicy:
    automated:
      prune: true
      selfHeal: false
    syncOptions:
    - CreateNamespace=true
---
#
#echo 'spec:
#  resourceCustomizations: |
#    argoproj.io/Application:
#      health.lua: |
#        hs = {}
#        hs.status = "Progressing"
#        hs.message = ""
#        if obj.status ~= nil then
#          if obj.status.health ~= nil then
#            hs.status = obj.status.health.status
#            hs.message = obj.status.health.message
#          end
#        end
#        return hs
#    operators.coreos.com/Subscription:
#      health.lua: |
#        hs = {}
#        if obj.status ~= nil then
#          if obj.status.currentCSV ~= nil and (obj.status.state == "AtLatestKnown" or obj.status.state == "UpgradeAvailable" or obj.status.state == "UpgradePending") then
#            hs.status = "Healthy"
#            hs.message = "Subcription installed"
#            return hs
#          end
#        end
#        hs.status = "Progressing"
#        hs.message = "Waiting for Subscription to complete."
#        return hs'
#


